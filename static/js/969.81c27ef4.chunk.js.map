{"version":3,"file":"static/js/969.81c27ef4.chunk.js","mappings":"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","sources":["components/Alert/Alert.jsx","components/ContactForm/ContactForm.jsx","components/FormButton/FormButton.jsx","components/FormInput/FormInput.jsx","components/ContactsList/ContactsList.jsx","components/ContactsListFilter/ContactsListFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const Alert = ({ type, children }) => {\n  let icon = '';\n  let className = '';\n\n  switch (type) {\n    case 'info':\n      icon = 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z';\n      className = 'alert-info';\n      break;\n    case 'success':\n      icon = 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z';\n      className = 'alert-success';\n      break;\n    case 'warning':\n      icon =\n        'M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z';\n      className = 'alert-warning';\n      break;\n    case 'error':\n      icon =\n        'M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z';\n      className = 'alert-error';\n      break;\n    default:\n      icon = 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z';\n      className = '';\n  }\n  return (\n    <div role=\"alert\" className={`alert ${className}`}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"stroke-current shrink-0 h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n          d={icon}\n        />\n      </svg>\n      <span>{children}</span>\n    </div>\n  );\n};\n","import { FormInput, FormButton } from 'components';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createContact } from './../../redux/contacts/operations';\nimport { selectContactsAll } from './../../redux/selectors';\nimport { useEffect, useRef } from 'react';\nimport { setError } from './../../redux/contacts/contactsSlice';\nimport { selectContactsError } from './../../redux/selectors';\nimport { Alert } from 'components/Alert/Alert';\n\nexport const ContactForm = ({ isDrawerOpen }) => {\n  const nameInput = useRef(null);\n  const contacts = useSelector(selectContactsAll);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n  const methods = useForm();\n  const { handleSubmit, reset } = methods;\n\n  useEffect(() => {\n    isDrawerOpen && nameInput.current.focus();\n  }, [isDrawerOpen]);\n\n  const contactsExist = ({ name }) => {\n    return contacts.find(item =>\n      item.name.toLowerCase().includes(name.toLowerCase())\n    );\n  };\n\n  const onFormSubmit = data => {\n    if (contactsExist(data)) {\n      dispatch(setError('Contact already added to your Phonebook'));\n      nameInput.current.focus();\n      return;\n    }\n\n    dispatch(createContact(data))\n      .unwrap()\n      .then(resp => {\n        reset();\n        document.getElementById('add-contact-drawer').click();\n      })\n      .catch(error => {});\n  };\n\n  return (\n    <FormProvider {...methods}>\n      {error && <Alert type=\"error\">{error}</Alert>}\n\n      <form\n        name=\"contactForm\"\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(onFormSubmit)}\n      >\n        <FormInput\n          label=\"Name\"\n          name=\"name\"\n          type=\"text\"\n          required={true}\n          ref={nameInput}\n        />\n        <FormInput label=\"Number\" name=\"number\" type=\"tel\" required={true} />\n\n        <FormButton text=\"Add contact\" type=\"submit\" />\n      </form>\n    </FormProvider>\n  );\n};\n","export const FormButton = ({ text, type = 'button', onClick }) => {\n  return (\n    <button className=\"btn btn-info\" type={type} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n","import { useFormContext } from 'react-hook-form';\nimport { forwardRef } from 'react';\n\nexport const FormInput = forwardRef(function FormInput(\n  { label, type, name, placeholder = '', required = false, focus = false },\n  fieldRef\n) {\n  const { register } = useFormContext();\n  const { ref, ...restRegister } = register(name);\n\n  return (\n    <label className=\"form-control w-full max-w-xs\">\n      <div className=\"label\">\n        <span className=\"label-text\">{label}</span>\n      </div>\n      <input\n        type={type}\n        name={name}\n        autoFocus={focus}\n        required={required}\n        placeholder={placeholder}\n        {...restRegister}\n        ref={e => {\n          ref(e);\n          if (fieldRef) {\n            fieldRef.current = e;\n          }\n        }}\n        className=\"input input-bordered w-full max-w-xs\"\n      />\n    </label>\n  );\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FormButton } from 'components';\nimport {\n  selectContactsIsLoading,\n  selectFilteredContacts,\n} from './../../redux/selectors';\nimport { useEffect } from 'react';\nimport {\n  deleteContact,\n  getAllContacts,\n} from './../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactsList = () => {\n  const isLoading = useSelector(selectContactsIsLoading);\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const onDelete = id => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .catch(error => {\n        toast.error(error);\n      });\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {contacts.length > 0 && (\n        <ul>\n          {contacts.map(({ id, name, phone }, index) => (\n            <li key={id}>\n              <p>{`${++index}. ${name}: ${phone}`}</p>\n              <FormButton text=\"Delete\" onClick={() => onDelete(id)} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from './../../redux/contacts/filterSlice';\nimport { FiSearch } from 'react-icons/fi';\n\nexport const ContactsListFilter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"relative mt-2 rounded-md shadow-sm\">\n      <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\n        <span className=\"text-gray-500 sm:text-sm\">\n          <FiSearch size={20} />\n        </span>\n      </div>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search\"\n        className=\"input input-bordered w-full max-w-xs px-10\"\n        onChange={event => dispatch(changeFilter(event.target.value.trim()))}\n      />\n    </div>\n  );\n};\n","import { ContactForm, ContactsList, ContactsListFilter } from 'components';\nimport { Drawer } from 'components/Drawer/Drawer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsDrawerOpen } from './../../redux/selectors';\nimport { toggleDrawer } from './../../redux/contacts/contactsSlice';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isDrawerOpen = useSelector(selectIsDrawerOpen);\n\n  return (\n    <div className=\"flex justify-center min-h-screen bg-base-200\">\n      <div className=\"text-center\">\n        <div className=\"max-w-md\">\n          <ContactsListFilter />\n          <ContactsList />\n\n          <Drawer\n            id=\"add-contact-drawer\"\n            position=\"end\"\n            onClick={() => dispatch(toggleDrawer())}\n          >\n            <ContactForm isDrawerOpen={isDrawerOpen} />\n          </Drawer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Alert","_ref","type","children","icon","className","_jsxs","role","concat","_jsx","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","ContactForm","isDrawerOpen","nameInput","useRef","contacts","useSelector","selectContactsAll","error","selectContactsError","dispatch","useDispatch","methods","useForm","handleSubmit","reset","useEffect","current","focus","FormProvider","_objectSpread","name","autoComplete","onSubmit","data","_ref2","find","item","toLowerCase","includes","contactsExist","setError","createContact","unwrap","then","resp","document","getElementById","click","catch","FormInput","label","required","ref","FormButton","text","_ref$type","onClick","forwardRef","fieldRef","_ref$placeholder","placeholder","_ref$required","_ref$focus","_register","register","useFormContext","restRegister","_objectWithoutProperties","_excluded","autoFocus","e","ContactsList","isLoading","selectContactsIsLoading","selectFilteredContacts","getAllContacts","_Fragment","Loader","length","map","index","id","phone","deleteContact","toast","onDelete","ContactsListFilter","FiSearch","size","onChange","event","changeFilter","target","value","trim","selectIsDrawerOpen","Drawer","position","toggleDrawer"],"sourceRoot":""}